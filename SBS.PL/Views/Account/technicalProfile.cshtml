@inject ICategoryRepository CategoryRepository
@using Services_Booking_System.View_Models
@model ProviderPortfolioViewModel

@{
    var categories = new SelectList(await CategoryRepository.GetAll(), "Id", "Name");
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-4">
            <div class="card shadow">
                <!-- Added shadow for visual depth -->
                <div class="card-body">
                    <div class="text-center">
                        <img src="@Model.ProviderImageUrl" class="rounded-circle mb-3" width="150" alt="Profile Image">
                        <h4 class="mb-0" id="provider-name-text"></h4>
                        <h4 class="mb-0" id="provider-name-text">@Model.ProviderName</h4>
                        <button class="btn btn-link btn-sm edit-button" title="Edit" onclick="toggleEdit('provider-name')"><i class="bi bi-pencil-square"></i></button>

                        <div class="edit-section d-none provider-name-input mt-2">
                            @using (Html.BeginForm("EditName", "Account", FormMethod.Post, new { @class = "form-inline" }))
                            {
                                <input type="text" class="form-control" asp-for="ProviderName" value="@Model.ProviderName" />
                                <button type="submit" class="btn btn-primary btn-sm mt-2">Save</button>
                            }
                        </div>


                        <p class="text-muted">
                            <span class="star-rating">
                                @for (int i = 0; i < Model.ProviderRating; i++)
                                {
                                      <!-- Display rating stars -->
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                            </span> (@Model.ProviderRating) | @Model.TotalReviews reviews | @Model.TotalTasksCompleted tasks completed
                        </p>
                    </div>


                    <hr>

                    <h6>About Me <button class="btn btn-link btn-sm edit-button float-right" title="Edit" onclick="toggleEdit('provider-bio')"><i class="bi bi-pencil-square"></i></button></h6>

                    <p id="provider-bio-text">@Model.ProviderBio</p>
                    <div class="edit-section d-none provider-bio-input mt-2">
                        @using (Html.BeginForm("EditBio", "Account", FormMethod.Post))
                        {
                            @Html.TextAreaFor(m => m.ProviderBio, new { @class = "form-control" })
                            <button type="submit" class="btn btn-primary btn-sm mt-2">Save</button>
                        }
                    </div>

                    <hr>

                    <h6>Services <button class="btn btn-link btn-sm edit-button float-right" title="Edit" onclick="toggleEdit('skills')"><i class="bi bi-pencil-square"></i></button></h6>
                    <ul id="skills-text" class="list-unstyled">
                        <!-- Changed to unstyled list -->
                        @foreach (var skill in Model.Skills)
                        {
                            <li class="mb-1">@skill</li>
                        }
                    </ul>

                    <div class="edit-section d-none skills-input mt-2">

                        @foreach (var skill in Model.Skills)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center mt-2">
                                @skill
                                <!-- Delete Skill Button -->
                                @using (Html.BeginForm("DeleteService", "Account", FormMethod.Post))
                                {
                                    @Html.Hidden("skillToDelete", skill)
                                    <button type="submit" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                }
                            </li>
                        }


                        <h6 class="mt-3">Add New Service</h6>
                        @using (Html.BeginForm("AddService", "Account", FormMethod.Post))
                        {
                            <div class="row">
                                <!-- Service Name Input -->
                                <div class="col-12 mb-3">
                                    <input name="serviceName" asp-for="addService.ServiceName" class="form-control" id="serviceName" placeholder="Enter new Service Name" />
                                </div>

                                <!-- Service Description Input -->
                                <div class="col-12 mb-3">
                                    <textarea name="serviceDescription" asp-for="addService.ServiceDescription" class="form-control" id="serviceDescription" placeholder="Enter Description"></textarea>
                                </div>

                                <!-- Service Price Input -->
                                <div class="col-12 mb-3">
                                    <input name="servicePrice" asp-for="addService.ServicePrice" class="form-control" id="servicePrice" placeholder="Enter Price" />
                                </div>

                                <!-- Category Id Input -->
                                <div class="col-12 mb-3">
                                    <select asp-for="addService.ServiceCategoryId" name="serviceCategoryId" id="serviceCategoryId" asp-items="categories" class="form-select">
                                        <option value="@null">--Select Category--</option>
                                    </select>
                                </div>

                                <!-- Submit Button -->
                                <div class="col-12">
                                    <button type="submit" class="btn btn-success w-100">Add Service</button>
                                </div>
                            </div>

                            @Html.ValidationMessage("newService", "Account", new { @class = "text-danger" })
                        }


                    </div>
                </div>
            </div>
        </div>





        <div class="col-md-8">
            @foreach (var service in Model.Services)
            {
                <div class="card mb-4 shadow">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5>@service.ServiceName</h5>
                            <span class="badge bg-primary rounded-pill">$@service.ServicePrice</span>
                        </div>

                        <p class="text-muted">
                            <span class="star-rating">
                                @for (int i = 0; i < service.ServiceRating; i++)
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                            </span>
                            (@service.ServiceRating) | @service.ServiceReviewsCount reviews
                        </p>

                        <p>@service.ServiceDescription</p>

                        <button class="btn btn-primary w-100">Select & Continue</button>
                    </div>
                </div>
            }
        </div>

    </div>
</div>



<script>
    function toggleEdit(field) {
        const textElement = document.getElementById(`${field}-text`);
        const inputElement = document.querySelector(`.${field}-input`);

        // Only proceed if both elements exist
        if (textElement && inputElement) {
            textElement.classList.toggle('d-none');
            inputElement.classList.toggle('d-none');
        } else {
            console.error(`Elements with field: ${field} not found.`);
        }
    }

</script>

<style>
    .edit-button {
        font-size: 0.8em; /* Smaller edit button */
    }

    .edit-section {
        /* Styling for the edit section, potentially adding a border or background color */
    }

    .star-rating { /* Style for the star ratings */
        color: gold;
    }
</style>